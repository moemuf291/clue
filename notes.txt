you need to  decode a key before saving it to a JSON file and you can go ahead and use that decoded key and it will 
still encrypt the file and everything but when you want to decrypt the file  you must encode() it so you can decrypt it 


when you do to open a file "with open("file_name.txt", "r,x,w") as file" there are a lot of stuff you can do with 
the file:

r = "read the file what is on the inside"
here is a example on how to use "r":
with open("data.txt", "r") as file:
    content = file.read()


w = "write to write content to the file the will overwrite a file to not overwrite and 
add contents to it you need to read the file first then write the content this makes it 
first read it to see its content the write so instead of creating a new one it add to that file"
here is a example on hwo to use "w":
with open("data.txt", "w") as file:
    file.write("New content")




x = "create a file"
here is a example of how to use "x":
with open("data.txt", "x") as file:
file.write("This file was just created.")



you also have "rb" and "wb" this are read binary and write binary these are used when you are encrypting files before you encrypt a 
file you need to use "rb" and then when you bave gotten everything you need you will use "wb" to write information 


this is the same as read but instead of haveing a .read() it has a json.load(file) this is used 
when you want to load a json file that has a key and a value but .txt is just text

with open("data.json", "r") as file:
    data = json.load(file)  # Reads and parses JSON
    print(data)

thi is also the as the "w" but instead of ".write()" we use json.dump(what you what to write, where you want to write, indent=4_

data = {"name": "Alice", "age": 30}

with open("data.json", "w") as file:
    json.dump(data, file, indent=4)  # Writes JSON, overwrites if exists
